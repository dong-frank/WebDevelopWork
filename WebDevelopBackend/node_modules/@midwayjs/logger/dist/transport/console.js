"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConsoleTransport = void 0;
const transport_1 = require("./transport");
const util_1 = require("../util");
const color_1 = require("../util/color");
const isTerminalSupportColor = color_1.supportsColor.stdout;
class ConsoleTransport extends transport_1.Transport {
    log(level, meta, ...args) {
        if (!(0, util_1.isEnableLevel)(level, this.options.level)) {
            return;
        }
        let msg = this.format(level, meta, args);
        if (process.env.FORCE_ENABLE_COLOR ||
            (this.options.autoColors && isTerminalSupportColor)) {
            const color = this.getColor(level);
            msg = (0, color_1.colorizeAll)(msg, color);
        }
        msg += this.options.eol;
        if (level === 'error') {
            process.stderr.write(msg);
        }
        else {
            process.stdout.write(msg);
        }
    }
    getColor(level) {
        switch (level) {
            case 'debug':
                return color_1.Color.blue;
            case 'info':
                return color_1.Color.green;
            case 'warn':
                return color_1.Color.yellow;
            case 'error':
                return color_1.Color.red;
            default:
                return color_1.Color.white;
        }
    }
    close() { }
}
exports.ConsoleTransport = ConsoleTransport;
//# sourceMappingURL=console.js.map