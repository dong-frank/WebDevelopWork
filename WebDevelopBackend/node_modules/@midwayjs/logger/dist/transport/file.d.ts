/// <reference types="node" />
import { ITransport, FileTransportOptions, LoggerLevel, LogMeta } from '../interface';
import { Transport } from './transport';
export declare class FileTransport extends Transport<FileTransportOptions> implements ITransport {
    protected readonly options: FileTransportOptions;
    protected logStream: any;
    protected bufSize: number;
    protected buf: any[];
    protected timer: NodeJS.Timeout;
    constructor(options?: FileTransportOptions);
    log(level: LoggerLevel, meta: LogMeta, ...args: any[]): void;
    /**
     * close stream
     */
    close(): void;
    flush(): void;
    /**
     * create interval to flush log into file
     */
    createInterval(): NodeJS.Timeout;
    get writable(): any;
}
export declare class ErrorTransport extends FileTransport {
    constructor(options: FileTransportOptions);
}
export declare class JSONTransport extends FileTransport {
    log(level: LoggerLevel, meta: LogMeta, ...args: any[]): void;
}
//# sourceMappingURL=file.d.ts.map