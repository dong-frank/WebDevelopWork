"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfoMiddleware = void 0;
const core_1 = require("@midwayjs/core");
const infoService_1 = require("../infoService");
let InfoMiddleware = class InfoMiddleware {
    resolve(app) {
        if (app.getFrameworkType() === core_1.MidwayFrameworkType.WEB_EXPRESS) {
            return async (req, res, next) => {
                if (req.path === this.infoPath) {
                    // return html
                    res.type('html');
                    res.send(this.infoService.info('html'));
                }
                else {
                    next();
                }
            };
        }
        else {
            return async (ctx, next) => {
                if (ctx.path === this.infoPath) {
                    // return html
                    return this.infoService.info('html');
                }
                return await next();
            };
        }
    }
    static getName() {
        return 'info';
    }
};
__decorate([
    (0, core_1.Config)('info.infoPath'),
    __metadata("design:type", Object)
], InfoMiddleware.prototype, "infoPath", void 0);
__decorate([
    (0, core_1.Inject)(),
    __metadata("design:type", infoService_1.InfoService)
], InfoMiddleware.prototype, "infoService", void 0);
InfoMiddleware = __decorate([
    (0, core_1.Middleware)()
], InfoMiddleware);
exports.InfoMiddleware = InfoMiddleware;
//# sourceMappingURL=info.middleware.js.map